# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.0

      # Specify service dependencies here if necessary

    working_directory: ~/Nightwatch-circleci-selenium

    steps:
      - checkout
      
      - run:
          name: "Starting a local server"
          background: true
          command: |
            node server.js
      
      - run:
          name: Check HTTP Server running
          command: |
            sleep 10
            curl --retry 10 --retry-delay 5 -v http://127.0.0.1:7000/
      
      - run: 
          name: "Downloading tunnel binary"
          command: |
            wget https://downloads.lambdatest.com/tunnel/v3/linux/64bit/LT_Linux.zip
      
      - run: 
          name: "Extracting tunnel binary"
          command: |
            sudo apt-get install unzip
            unzip LT_Linux.zip

      - run: 
          name: "Executing tunnel binary"
          background: true
          command: |
            if [ -z "qLzlsFECIptQEriaahXlT8RYD09zf83zePxByro9OYMlv725hs" ]; then
                echo "Error: The parameter lambdatest_key is empty. Please ensure the environment variable LAMBDATEST_KEY has been added."
                exit 1
              fi
              read LOWERPORT UPPERPORT < /proc/sys/net/ipv4/ip_local_port_range
              PORT=$LOWERPORT
              while [  $PORT -lt $UPPERPORT ]; do
                  ss -lpn | grep -q ":$PORT " || break
                  let PORT=PORT+1
              done
              echo "$PORT" > /tmp/port
              
              ./LT --user ${LAMBDATEST_USERNAME} --key ${LAMBDATEST_ACCESS_KEY} --verbose --controller circleci --infoAPIPort $PORT

      - run:
          name: Wait for LambdaTest Tunnel
          command: |
            while [ ! -f /tmp/port ]; do sleep 0.5; done
            PORT=$(head -1 /tmp/port)
            tunnel_status=$(curl  --silent --connect-timeout 5 --max-time 5 --retry 10 --retry-delay 2 --retry-max-time 30 http://127.0.0.1:$PORT/api/v1.0/info  | jq -r .status)
            while [ "$tunnel_status" != "SUCCESS" ]
            do
            sleep 0.5
            tunnel_status=$(curl  --silent --connect-timeout 5 --max-time 5 --retry 10 --retry-delay 2 --retry-max-time 30 http://127.0.0.1:$PORT/api/v1.0/info  | jq -r .status)
            echo $tunnel_status
            done
      
      
      - run: 
          name: "Setup custom environment variables"
          command: |
            echo 'export LT_USERNAME="${LAMBDATEST_USERNAME}"' >> $BASH_ENV

      - run:
          name: "Setup custom environment variables"
          command: |
            echo 'export LT_ACCESS_KEY="${LAMBDATEST_ACCESS_KEY}"' >> $BASH_ENV

      - run: # test what branch we're on.
          name: "Here is the LT_Username : "
          command: echo ${LT_USERNAME}       

      # Download and cache dependencies
 #    - restore_cache:
 #        keys:
 #          - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found

      - run: npm install

#      - save_cache:
#          paths:
#            - node_modules
#          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: node_modules/.bin/nightwatch -e chrome || true
      
      - run:
          name: Close LambdaTest Tunnel
          command: |
            PORT=$(head -1 /tmp/port)
            status_code=$(curl --request DELETE --write-out %{http_code} --silent --output /dev/null http://127.0.0.1:$PORT/api/v1.0/stop)
            if [[ "$status_code" -ne 200 ]] ; then
              killall LT
            fi
            rm /tmp/port
